{"version":3,"sources":["helpers/socket.js","components/Profile.js","components/StatusBar.js","views/home.js","views/settings.js","views/profileList.js","views/editProfile.js","App.js","reportWebVitals.js","index.js"],"names":["socket","socketio","connect","SocketContext","React","createContext","Profile","props","componentDidMount","bind","hitRadius","draggable","options","maintainAspectRatio","responsive","pointHitRadius","animation","duration","scales","y","min","max","stepSize","title","text","display","color","font","size","x","plugins","dragData","round","dragX","onDrag","e","datasetIndex","index","value","onDragStart","element","onDragEnd","arrayUpdater","zoom","wheel","enabled","pinch","mode","tooltip","xAlign","yAlign","displayColors","caretPadding","caretSize","bodySpacing","legend","data","datasets","label","this","profile","datapoints","showLine","backgroundColor","borderColor","borderWidth","pointRadius","hoverRadius","historicTemps","borderDash","fill","Component","StatusBar","componentWillUnmount","drawerChange","stop","state","drawer","percentage","temperature","status","address","currentProfile","axios","post","reason","then","res","on","message","setState","percent","current_profile","fetch","response","json","result","off","AppBar","position","Toolbar","IconButton","edge","aria-label","onClick","Grid","container","spacing","item","Typography","name","style","marginLeft","Button","startIcon","variant","LinearProgress","Drawer","open","onClose","ListItem","button","ListItemIcon","Divider","component","Link","to","ListItemText","Home","StartButton","styled","background","runProfile","historicTemperature","percentDone","historic_temperature","profile_name","stopStartButton","paddingTop","width","margin","Container","maxWidth","alignItems","justify","pathname","Settings","handleChange","currentlyExpanded","expanded","panel","Accordion","AccordionSummary","expandIcon","aria-controls","id","AccordionDetails","Switch","checked","inputProps","TextField","FormControl","InputLabel","Select","MenuItem","ProfileList","MyDataGrid","DataGrid","height","SelectButton","columns","field","headerName","editable","profiles","activeItem","dialog","forceLoadDialog","loadClicked","forceLoadClicked","handleItemClick","handleDialogClose","downloadProfile","fileChanged","handleForceDialogClose","row","getData","forEach","Date","date_created","toLocaleString","last_run","force_load","history","push","console","log","blob","Blob","JSON","stringify","type","FileSaver","saveAs","target","files","Dialog","fullWidth","DialogTitle","DialogContent","DialogActions","autoFocus","direction","align","justifyContent","xs","md","lg","rows","pageSize","checkboxSelection","disableMultipleSelection","onRowClick","autoHeight","accept","hidden","onChange","withRouter","EditProfile","saveProfile","handleInputChange","goBack","cancelClicked","loadDialog","enterNameDialog","newDatapoints","location","newName","newProfile","now","Input","defaultValue","App","disconnect","className","Provider","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","isLocal","window","hostname","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c4422cec.chunk.js","sourcesContent":["import React from \"react\";\r\nimport socketio from \"socket.io-client\";\r\n\r\n//no url since backend is hosted on the same domain\r\nexport const socket = socketio.connect();\r\nexport const SocketContext = React.createContext();","import React, { Component } from \"react\";\r\nimport { Scatter } from 'react-chartjs-2';\r\n//import * as zoom from 'chartjs-plugin-zoom'\r\nimport {DraggableGraph} from './DraggableGraph';\r\n\r\n\r\nclass Profile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.componentDidMount = this.componentDidMount.bind(this);\r\n\r\n    //hitradius over 25 ensures that touch devices can drag points\r\n    var hitRadius = 1;\r\n    if (this.props.draggable) {\r\n      hitRadius = 30;\r\n    }\r\n    this.options = {\r\n      maintainAspectRatio: true,\r\n      responsive: true,\r\n      pointHitRadius: hitRadius,\r\n      animation: {\r\n        duration: 0,\r\n      },\r\n      scales: {\r\n        y: {\r\n          min: 0,\r\n          max: 300,\r\n          stepSize: 1,\r\n          title: {\r\n            text: 'Temperature (°C)',\r\n            display: true,\r\n            color: 'rgba(41, 216, 255, 0.7)',\r\n            font: {\r\n              size: 20,\r\n            },\r\n          },\r\n        },\r\n        x: {\r\n          min: 0,\r\n          max: 400,\r\n          stepSize: 1,\r\n          title: {\r\n            text: 'Time (Seconds)',\r\n            display: true,\r\n            color: 'rgba(41, 216, 255, 0.7)',\r\n            font: {\r\n              size: 20,\r\n            },\r\n          },\r\n        },\r\n      },\r\n    \r\n      plugins: {\r\n        dragData: {\r\n          round: 0,\r\n          dragX: true,\r\n          onDrag: function (e, datasetIndex, index, value) {\r\n            //console.log(e, datasetIndex, index, value);\r\n          },\r\n          onDragStart: function (e, element) {\r\n            //console.log(e, element);\r\n          },\r\n          onDragEnd: function (e, datasetIndex, index, value) {\r\n            //update array with new datapoint\r\n            props.arrayUpdater[index] = value;\r\n            \r\n          },\r\n        },\r\n        zoom: {\r\n          wheel: {\r\n            enabled: true,\r\n          },\r\n          pinch: {\r\n            enabled: true\r\n          },\r\n          mode: 'xy',\r\n        },\r\n        tooltip: {\r\n          xAlign: 'right',\r\n          yAlign: 'bottom',\r\n          displayColors: false,\r\n          caretPadding: 30,\r\n          caretSize: 10,\r\n          bodySpacing: 20,\r\n        },\r\n        legend: {\r\n          display: false,\r\n        },\r\n        title: {\r\n          display: false,\r\n        },\r\n      },\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    \r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Scatter data={{\r\n          datasets: [\r\n            {\r\n              label: 'Profile',\r\n              data: this.props.profile.datapoints,\r\n              showLine: true,\r\n              backgroundColor: 'rgba(42, 216, 255, 0.2)',\r\n              borderColor: 'rgba(42, 216, 255, 1)',\r\n              borderWidth: 1,\r\n              pointRadius: 5,\r\n              hoverRadius: 10,\r\n              dragData: this.props.draggable,\r\n            },\r\n            {\r\n              label: 'Historic Temerature',\r\n              data: this.props.historicTemps,\r\n              showLine: true,\r\n              backgroundColor: 'rgba(233, 236, 0, 0.2)',\r\n              borderColor: 'rgba(233, 236, 0, 1)',\r\n              borderWidth: 1,\r\n              pointRadius: 1,\r\n              hoverRadius: 2,\r\n              dragData: false,\r\n              borderDash: [10, 5],\r\n              fill: 0,\r\n            },\r\n          ],\r\n        }} options={this.options} />  \r\n      </>\r\n    );\r\n  }\r\n}\r\n//this.props.historicTemps\r\nexport default Profile;","import { React, Component } from 'react';\r\nimport { socket } from '../helpers/socket';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport HistoryIcon from '@material-ui/icons/History';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport StopIcon from '@material-ui/icons/Stop';\r\n\r\nimport { ListItem, Drawer, ListItemText, ListItemIcon, Divider } from '@material-ui/core';\r\n\r\nimport { LinearProgress, Grid } from '@material-ui/core';\r\n\r\nclass StatusBar extends Component {\r\n    constructor() {\r\n        super();\r\n        this.componentDidMount = this.componentDidMount.bind(this);\r\n        this.componentWillUnmount = this.componentWillUnmount.bind(this);\r\n        this.drawerChange = this.drawerChange.bind(this);\r\n        this.stop = this.stop.bind(this);\r\n        this.state = { drawer: false, percentage: 0, temperature: 0, status: \"Ready\", address: \":\", currentProfile: \"\" };\r\n    }\r\n\r\n    stop() {\r\n        axios.post('/api/stop', { reason: \"test\" })\r\n            .then(res => {\r\n                //console.log(res);\r\n            });\r\n    }\r\n\r\n    componentDidMount() {\r\n        socket.on(\"status_update\", (message) => {\r\n            this.setState({\r\n                percentage: message.percent,\r\n                temperature: message.temperature,\r\n                status: message.status,\r\n                currentProfile: message.current_profile\r\n            });\r\n        });\r\n        fetch('/api/server_address')\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                this.setState({ address: result[\"Ethernet\"][0] });\r\n            });\r\n    }\r\n\r\n    drawerChange() {\r\n        if (this.state.drawer) {\r\n            this.setState({ drawer: false });\r\n        } else {\r\n            this.setState({ drawer: true });\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        socket.off(\"status_update\");\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <AppBar position=\"static\">\r\n                    <Toolbar>\r\n                        <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\" onClick={this.drawerChange}>\r\n                            <MenuIcon />\r\n                        </IconButton>\r\n                        <Grid container spacing={5}>\r\n                            <Grid item>\r\n                                <Typography  >\r\n                                    Address: {this.state.address}\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Typography >\r\n                                    {this.state.temperature} °C\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Typography  >\r\n                                    {this.state.status}\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Typography  >\r\n                                    {this.state.currentProfile.name}\r\n                                </Typography>\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n                        <div style={{ marginLeft: 'auto' }}>\r\n                            {this.state.status !== \"Ready\" &&\r\n                                <Button onClick={this.stop} startIcon={<StopIcon />} variant=\"contained\" color=\"secondary\">Stop</Button>\r\n                            }\r\n                        </div>\r\n\r\n                    </Toolbar>\r\n                    <LinearProgress variant=\"determinate\" value={this.state.percentage} />\r\n                </AppBar>\r\n\r\n                <Drawer open={this.state.drawer} onClose={this.drawerChange} >\r\n                    <ListItem button key={\"menu\"} onClick={this.drawerChange}>\r\n                        <ListItemIcon><MenuIcon /></ListItemIcon>\r\n                    </ListItem>\r\n                    <Divider />\r\n                    <ListItem button key={\"Home\"} component={Link} onClick={this.drawerChange} to='/'>\r\n                        <ListItemIcon><HomeIcon /></ListItemIcon>\r\n                        <ListItemText>Home</ListItemText>\r\n                    </ListItem>\r\n                    <ListItem button key={\"ProfileList\"} component={Link} onClick={this.drawerChange} to='/profileList'>\r\n                        <ListItemIcon><HistoryIcon /></ListItemIcon>\r\n                        <ListItemText>Profile List</ListItemText>\r\n                    </ListItem>\r\n                    <ListItem button key={\"Settings\"} component={Link} onClick={this.drawerChange} to='/settings'>\r\n                        <ListItemIcon><SettingsIcon /></ListItemIcon>\r\n                        <ListItemText>Settings</ListItemText>\r\n                    </ListItem>\r\n                </Drawer>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default StatusBar;\r\n\r\n","import { React, Component } from 'react';\r\n\r\nimport Profile from '../components/Profile';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { Button, Container, Grid } from '@material-ui/core';\r\nimport { Link } from \"react-router-dom\";\r\nimport { socket } from '../helpers/socket';\r\nimport axios from 'axios';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport StopIcon from '@material-ui/icons/Stop';\r\nimport StatusBar from '../components/StatusBar';\r\nimport { styled } from '@material-ui/core/styles';\r\n\r\nclass Home extends Component {\r\n    constructor() {\r\n      super();\r\n      this.runProfile = this.runProfile.bind(this);\r\n      this.stop = this.stop.bind(this);\r\n      this.state = ({ currentProfile: '', historicTemperature: [], percentDone: 0, status: \"Ready\" });\r\n      \r\n  }\r\n  \r\n  StartButton = styled(Button)({\r\n    background: '#3dd900',\r\n    '&:hover': '#3dd900'\r\n  });\r\n\r\n    componentDidMount() {\r\n      fetch('/api/current_profile')\r\n      .then(response => response.json())\r\n        .then(result => {\r\n        this.setState({ currentProfile: result.current_profile});\r\n      });\r\n      socket.on(\"status_update\", (message) => {\r\n        this.setState({\r\n          currentProfile: message.current_profile,\r\n          historicTemperature: message.historic_temperature,\r\n          status: message.status\r\n        });\r\n      });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n      socket.off(\"status_update\");\r\n    }\r\n\r\n    runProfile() {\r\n      axios.post('/api/run', {profile_name: this.state.currentProfile.name})\r\n      .then(res => {\r\n      });\r\n    }\r\n\r\n    stop() {\r\n      axios.post('/api/stop', {reason: \"test\"})\r\n      .then(res => {\r\n        //console.log(res);\r\n      });\r\n    }\r\n\r\n  render() {\r\n    const isRunning = this.state.status !== \"Ready\";\r\n    let stopStartButton;\r\n    if (isRunning) {\r\n      stopStartButton = <Button onClick={this.stop} startIcon={<StopIcon />} variant=\"contained\" color=\"secondary\">Stop</Button>;\r\n    } else {\r\n      stopStartButton = <this.StartButton onClick={this.runProfile} startIcon={<PlayArrowIcon />} variant=\"contained\" color=\"primary\">Start</this.StartButton>;\r\n    }\r\n    return (\r\n      <>\r\n          \r\n        <StatusBar />\r\n        <div style={{  paddingTop: \"30px\", width: '82%', margin: '0 auto'}}>\r\n          <Profile draggable={false} profile={this.state.currentProfile} historicTemps={this.state.historicTemperature} />\r\n        </div>\r\n          \r\n        <Container maxWidth={false}>\r\n          <Grid container spacing={3} alignItems=\"center\" justify=\"center\">\r\n            <Grid item>\r\n              <Button component={Link} to={{ pathname: '/editProfile', state: { profile: this.state.currentProfile } }} startIcon={<EditIcon />} variant=\"contained\" color=\"primary\" >Edit Current Profile</Button>\r\n            </Grid>\r\n            <Grid item>\r\n              {stopStartButton}\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n        \r\n        \r\n          \r\n        </>\r\n      );\r\n    }\r\n}\r\n\r\nexport default Home;","import React, { Component } from \"react\";\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Input from '@material-ui/core/Input';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport StatusBar from '../components/StatusBar';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Container from '@material-ui/core/Container';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport { InputLabel, TextField } from \"@material-ui/core\";\r\n\r\nclass Settings extends Component {\r\n    constructor() {\r\n        super();\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.currentlyExpanded = '';\r\n        this.state = ({ expanded: '' });\r\n    }\r\n\r\n    handleChange(panel) {\r\n        this.currentlyExpanded = panel;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <StatusBar />\r\n                <Container maxWidth={false} >\r\n                    <Accordion >\r\n                        <AccordionSummary\r\n                            expandIcon={<ExpandMoreIcon />}\r\n                            aria-controls=\"panel1bh-content\"\r\n                            id=\"panel1bh-header\"\r\n                        >\r\n                            <Typography >Network</Typography>\r\n                        </AccordionSummary>\r\n                        <AccordionDetails>\r\n                            <Typography>\r\n                                Note: changes will be applied on server restart.\r\n                            </Typography>\r\n                            <Switch\r\n                                checked={false}\r\n\r\n                                name=\"checkedA\"\r\n                                inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                            />\r\n                        </AccordionDetails>\r\n                    </Accordion>\r\n                    <Accordion >\r\n                        <AccordionSummary\r\n                            expandIcon={<ExpandMoreIcon />}\r\n                            aria-controls=\"panel2bh-content\"\r\n                            id=\"panel2bh-header\"\r\n                        >\r\n                            <Typography >PID</Typography>\r\n                        </AccordionSummary>\r\n                        <AccordionDetails>\r\n                            <TextField variant=\"outlined\" label='Proportional' value={50} />\r\n                            <TextField variant=\"outlined\" label='Integral' value={50} />\r\n                            <TextField variant=\"outlined\" label='Derivative' value={50} />\r\n                        </AccordionDetails>\r\n                    </Accordion>\r\n                    <Accordion >\r\n                        <AccordionSummary\r\n                            expandIcon={<ExpandMoreIcon />}\r\n                            aria-controls=\"panel3bh-content\"\r\n                            id=\"panel3bh-header\"\r\n                        >\r\n                            <Typography >Hardware</Typography>\r\n                        </AccordionSummary>\r\n                        <AccordionDetails>\r\n                            <FormControl>\r\n                                <InputLabel>Relay GPIO Pin</InputLabel>\r\n                                <Select\r\n                                    value={27}\r\n                                >\r\n                                    <MenuItem value={5}>5 (pin 29)</MenuItem>\r\n                                    <MenuItem value={6}>6 (pin 31)</MenuItem>\r\n                                    <MenuItem value={16}>16 (pin 36)</MenuItem>\r\n                                    <MenuItem value={17}>17 (pin 11)</MenuItem>\r\n                                    <MenuItem value={22}>22 (pin 15)</MenuItem>\r\n                                    <MenuItem value={23}>23 (pin 16)</MenuItem>\r\n                                    <MenuItem value={24}>24 (pin 18)</MenuItem>\r\n                                    <MenuItem value={25}>25 (pin 22)</MenuItem>\r\n                                    <MenuItem value={26}>26 (pin 37)</MenuItem>\r\n                                    <MenuItem value={27}>27 (pin 13)</MenuItem>\r\n                                </Select>\r\n                            </FormControl>\r\n\r\n                            <FormControl>\r\n                                <InputLabel>Fan GPIO Pin</InputLabel>\r\n                                <Select\r\n                                    value={22}\r\n                                >\r\n                                    <MenuItem value={5}>5 (pin 29)</MenuItem>\r\n                                    <MenuItem value={6}>6 (pin 31)</MenuItem>\r\n                                    <MenuItem value={16}>16 (pin 36)</MenuItem>\r\n                                    <MenuItem value={17}>17 (pin 11)</MenuItem>\r\n                                    <MenuItem value={22}>22 (pin 15)</MenuItem>\r\n                                    <MenuItem value={23}>23 (pin 16)</MenuItem>\r\n                                    <MenuItem value={24}>24 (pin 18)</MenuItem>\r\n                                    <MenuItem value={25}>25 (pin 22)</MenuItem>\r\n                                    <MenuItem value={26}>26 (pin 37)</MenuItem>\r\n                                    <MenuItem value={27}>27 (pin 13)</MenuItem>\r\n                                </Select>\r\n                            </FormControl>\r\n                        </AccordionDetails>\r\n                    </Accordion>\r\n                    <Accordion >\r\n                        <AccordionSummary\r\n                            expandIcon={<ExpandMoreIcon />}\r\n                            aria-controls=\"panel4bh-content\"\r\n                            id=\"panel4bh-header\"\r\n                        >\r\n                            <Typography >Appearance</Typography>\r\n                        </AccordionSummary>\r\n                        <AccordionDetails>\r\n                            <Typography>\r\n                                Under Construction\r\n                            </Typography>\r\n                            <FormControl>\r\n                                <InputLabel>Theme</InputLabel>\r\n                                <Select\r\n                                    value={'Dark'}\r\n                                >\r\n                                    <MenuItem value={'Dark'}>Dark</MenuItem>\r\n                                    <MenuItem value={'Light'}>Light</MenuItem>\r\n                                </Select>\r\n                            </FormControl>\r\n                            <FormControl>\r\n                                <InputLabel>Temperature Units</InputLabel>\r\n                                <Select\r\n                                    value={'Celcius'}\r\n                                >\r\n                                    <MenuItem value={'Celcius'}>Celcius</MenuItem>\r\n                                    <MenuItem value={'Fahrenheit'}>Fahrenheit</MenuItem>\r\n                                </Select>\r\n                            </FormControl>\r\n                        </AccordionDetails>\r\n                    </Accordion>\r\n                </Container>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Settings;","import { React, Component } from 'react';\r\nimport Profile from '../components/Profile';\r\nimport { Button, Grid, Dialog, DialogTitle, DialogContent, DialogActions, IconButton, Container } from '@material-ui/core';\r\nimport { DataGrid } from '@material-ui/data-grid'\r\nimport './profileList.css';\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport PublishIcon from '@material-ui/icons/Publish';\r\nimport SaveAltIcon from '@material-ui/icons/SaveAlt';\r\nimport { styled } from '@material-ui/core/styles';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport StatusBar from '../components/StatusBar';\r\nimport FileSaver from 'file-saver';\r\n\r\nclass ProfileList extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = ({ profiles: [], activeItem: \"\", dialog: false, forceLoadDialog: false });\r\n    this.componentDidMount = this.componentDidMount.bind(this);\r\n    this.loadClicked = this.loadClicked.bind(this);\r\n    this.forceLoadClicked = this.forceLoadClicked.bind(this);\r\n    this.handleItemClick = this.handleItemClick.bind(this);\r\n    this.handleDialogClose = this.handleDialogClose.bind(this);\r\n    this.downloadProfile = this.downloadProfile.bind(this);\r\n    this.fileChanged = this.fileChanged.bind(this);\r\n    this.handleForceDialogClose = this.handleForceDialogClose.bind(this);\r\n  }\r\n  MyDataGrid = styled(DataGrid)({\r\n    color: 'white',\r\n    height: 550,\r\n  });\r\n\r\n  SelectButton = styled(Button)({\r\n    background: '#3dd900',\r\n    '&:hover': '#3dd900'\r\n  });\r\n\r\n  columns = [\r\n    { field: 'name', headerName: 'Profile Name', width: 200 },\r\n    {\r\n      field: 'last_run',\r\n      headerName: 'Last Loaded',\r\n      width: 200,\r\n      editable: false,\r\n    },\r\n    {\r\n      field: 'date_created',\r\n      headerName: 'Date Created',\r\n      width: 200,\r\n      editable: false,\r\n    },\r\n  ];\r\n\r\n\r\n  handleItemClick(e) {\r\n    this.setState({ activeItem: e.row })\r\n    this.setState({ dialog: true });\r\n  }\r\n\r\n  handleDialogClose() {\r\n    this.setState({ dialog: false });\r\n  }\r\n\r\n  handleForceDialogClose() {\r\n    this.setState({ forceLoadDialog: false });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getData();\r\n  }\r\n\r\n  getData() {\r\n    fetch('/api/reflow_profiles/all')\r\n      .then(response => response.json())\r\n      .then(result => {\r\n        result.forEach(element => {\r\n          element['id'] = element.name;\r\n          element['date_created'] = new Date(element.date_created).toLocaleString();\r\n          element['last_run'] = new Date(element.last_run).toLocaleString();\r\n        });\r\n        this.setState({ profiles: result });\r\n      });\r\n  }\r\n\r\n  loadClicked() {\r\n    \r\n    axios.post('/api/reflow_profiles/load', { profile_name: this.state.activeItem.name, force_load: false })\r\n      .then(res => {\r\n        //check if response is ok or if validation failed\r\n        if (res.data.status === 200) {\r\n          //go to home page\r\n          const { history } = this.props;\r\n          if (history) history.push('/');\r\n        }\r\n        else if (res.data.status === 409) {\r\n          console.log('got 409')\r\n          this.setState({ forceLoadDialog: true });\r\n        }\r\n      });\r\n  }\r\n\r\n  forceLoadClicked() {\r\n\r\n    axios.post('/api/reflow_profiles/load', { profile_name: this.state.activeItem.name, force_load: true })\r\n      .then(res => {\r\n        //check if response is ok or if validation failed\r\n        if (res.data.status === 200) {\r\n          //go to home page\r\n          const { history } = this.props;\r\n          if (history) history.push('/');\r\n        }\r\n      });\r\n  }\r\n\r\n  downloadProfile() {\r\n    var blob = new Blob([JSON.stringify(this.state.activeItem, null, 3)], { type: \"text/plain;charset=utf-8\" });\r\n    FileSaver.saveAs(blob, this.state.activeItem.name + \".json\");\r\n  }\r\n\r\n  fileChanged(e) {\r\n    console.log(e.target.files[0]);\r\n    axios.post('/api/reflow_profiles/save', e.target.files[0])\r\n      .then(res => {\r\n        this.getData();\r\n      });\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <StatusBar />\r\n        <Dialog onClose={this.handleDialogClose} open={this.state.dialog} fullWidth={true} maxWidth={\"sm\"}>\r\n          <DialogTitle>\r\n            {this.state.activeItem.name}\r\n            <IconButton aria-label=\"close\" onClick={this.handleDialogClose}>\r\n              <CloseIcon />\r\n            </IconButton>\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <Profile draggable={false} profile={this.state.activeItem} historicTemps={[]} />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button startIcon={<SaveAltIcon />} variant=\"contained\" color=\"primary\" onClick={this.downloadProfile}>Download</Button>\r\n            <Button component={Link} to={{ pathname: '/editProfile', state: { profile: this.state.activeItem } }} startIcon={<EditIcon />} variant=\"contained\" color=\"primary\">Edit Profile</Button>\r\n            <this.SelectButton onClick={this.loadClicked} startIcon={<DoneIcon />} variant=\"contained\">Load</this.SelectButton>\r\n          </DialogActions>\r\n        </Dialog>\r\n\r\n        <Dialog open={this.state.forceLoadDialog}>\r\n          <DialogTitle>\r\n            Oven Currently Running\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            Stop oven and load profile?\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={this.handleForceDialogClose} color=\"primary\">\r\n              Cancel\r\n            </Button>\r\n            <Button onClick={this.forceLoadClicked} color=\"primary\" autoFocus>\r\n              Force Load\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n\r\n        <Container maxWidth={false}>\r\n          <Grid container direction={\"row\"} align={\"center\"} justifyContent={\"center\"} spacing={2}>\r\n            <Grid item xs={12} md={8} lg={6}>\r\n              <this.MyDataGrid\r\n                rows={this.state.profiles}\r\n                columns={this.columns}\r\n                pageSize={5}\r\n                checkboxSelection={false}\r\n                disableMultipleSelection={true}\r\n                onRowClick={this.handleItemClick}\r\n                autoHeight={true}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n        \r\n        <Container maxWidth={false}>\r\n          <Grid container spacing={3} alignItems=\"center\" justify=\"center\">\r\n            <Grid item>\r\n              <Button component={Link} to=\"/\" startIcon={<CancelIcon />} variant=\"contained\" color=\"primary\">Cancel</Button>\r\n            </Grid>\r\n            <Grid item>\r\n              <Button startIcon={<PublishIcon />} variant=\"contained\" color=\"primary\" component=\"label\" >Upload<input type=\"file\" accept=\".json\" hidden onChange={this.fileChanged} /></Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n\r\n\r\n        \r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(ProfileList);","import { React, Component } from 'react';\r\nimport Profile from '../components/Profile';\r\nimport { Button, Input, Grid, Container } from '@material-ui/core';\r\nimport Keyboard from 'react-simple-keyboard';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport 'react-simple-keyboard/build/css/index.css';\r\nimport axios from 'axios';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport StatusBar from '../components/StatusBar';\r\n\r\nimport SaveIcon from '@material-ui/icons/Save';\r\n\r\n\r\nclass EditProfile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    //this.componentWillMount = this.componentWillMount.bind(this);\r\n    this.componentDidMount = this.componentDidMount.bind(this);\r\n    this.saveProfile = this.saveProfile.bind(this);\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n    this.goBack = this.goBack.bind(this);\r\n    this.loadClicked = this.loadClicked.bind(this);\r\n    this.forceLoadClicked = this.forceLoadClicked.bind(this);\r\n    this.cancelClicked = this.cancelClicked.bind(this);\r\n    this.state = ({ loadDialog: false, forceLoadDialog: false, enterNameDialog: false });\r\n    //this array will be sent to the profile child component to be updated with the new points\r\n    this.newDatapoints = this.props.location.state.profile.datapoints;\r\n    this.newName = this.props.location.state.profile.name;\r\n  }\r\n\r\n  handleInputChange(e) {\r\n    this.newName = e.target.value;\r\n  }\r\n  \r\n  componentDidMount() {\r\n\r\n  }\r\n\r\n  goBack() {\r\n    this.props.history.goBack();\r\n  }\r\n\r\n  loadClicked() {\r\n    axios.post('/api/reflow_profiles/load', { profile_name: this.newName, force_load: false })\r\n      .then(res => {\r\n        //check if response is ok or if validation failed\r\n        if (res.data.status === 200) {\r\n          //go to home page\r\n          const { history } = this.props;\r\n          if (history) history.push('/');\r\n        }\r\n        else if (res.data.status === 409) {\r\n          this.setState({ loadDialog: false });\r\n          this.setState({ forceLoadDialog: true });\r\n        }\r\n      });\r\n  }\r\n\r\n  forceLoadClicked() {\r\n\r\n    axios.post('/api/reflow_profiles/load', { profile_name: this.newName, force_load: true })\r\n      .then(res => {\r\n        //check if response is ok or if validation failed\r\n        if (res.data.status === 200) {\r\n          //go to home page\r\n          const { history } = this.props;\r\n          if (history) history.push('/');\r\n        }\r\n      });\r\n  }\r\n\r\n  cancelClicked() {\r\n    this.setState({ loadDialog: false, forceLoadDialog: false, enterNameDialog: false });\r\n  }\r\n\r\n  saveProfile() {\r\n    var newProfile = {};\r\n    newProfile.name = this.newName;\r\n    newProfile.date_created = Date.now();\r\n    newProfile.last_run = 0;\r\n    newProfile.datapoints = this.newDatapoints;\r\n\r\n    axios.post('/api/reflow_profiles/save', newProfile)\r\n      .then(res => {\r\n        //console.log(res);\r\n        this.setState({ loadDialog: true });\r\n      });\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <StatusBar />\r\n\r\n        <Dialog open={this.state.loadDialog}>\r\n          <DialogTitle>\r\n            Profile saved\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            Would you like to load the profile now?\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={this.cancelClicked} color=\"primary\">\r\n              Don't Load\r\n            </Button>\r\n            <Button onClick={this.loadClicked} color=\"primary\" autoFocus>\r\n              Load\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n\r\n        <Dialog open={this.state.forceLoadDialog}>\r\n          <DialogTitle>\r\n            Oven Currently Running\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            Stop oven and load profile?\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={this.cancelClicked} color=\"primary\">\r\n              Cancel\r\n            </Button>\r\n            <Button onClick={this.forceLoadClicked} color=\"primary\" autoFocus>\r\n              Force Load\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n\r\n        <div style={{ paddingTop: \"30px\", width: '82%', margin: '0 auto' }}>\r\n          <Profile draggable={true} profile={this.props.location.state.profile} arrayUpdater={this.newDatapoints} />\r\n        </div>\r\n        \r\n        <Container maxWidth={false}>\r\n          <Grid container spacing={3} alignItems=\"center\" justify=\"center\">\r\n            <Grid item>\r\n              <Button onClick={this.goBack} startIcon={<CancelIcon />} variant=\"contained\" color=\"primary\">Cancel</Button>\r\n            </Grid>\r\n            <Grid item>\r\n              <Button onClick={this.saveProfile} startIcon={<SaveIcon />} variant=\"contained\" color=\"primary\">Save</Button>\r\n            </Grid>\r\n            <Grid item>\r\n              <Input style={{ color: 'white' }} onChange={this.handleInputChange} label='Profile Name' defaultValue={this.newName} />\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n        \r\n        \r\n        \r\n        \r\n        {/*<Keyboard theme={\"hg-theme-default\"} />*/}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(EditProfile);","\r\nimport React, { Component } from \"react\";\r\nimport { SocketContext, socket } from './helpers/socket';\r\nimport './App.css';\r\nimport Home from './views/home';\r\nimport Settings from './views/settings';\r\nimport ProfileList from './views/profileList';\r\nimport StatusBar from './components/StatusBar';\r\n\r\n\r\n//import Profile from './components/Profile';\r\n\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\nimport EditProfile from \"./views/editProfile\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.componentWillUnmount = this.componentWillUnmount.bind(this);\r\n\r\n  }\r\n\r\n\r\n\r\n  componentWillUnmount() {\r\n    socket.disconnect();\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n\r\n      \r\n        <div className=\"App\">\r\n        <Router>\r\n          <SocketContext.Provider value={socket}>\r\n            \r\n            <Switch>\r\n              \r\n              <Route exact path=\"/\" component={Home}>\r\n              </Route>\r\n              <Route path=\"/editProfile\" component={EditProfile} >\r\n              </Route>\r\n              <Route path=\"/profileList\" component={ProfileList}>\r\n              </Route>\r\n              <Route path=\"/settings\" component={Settings}>\r\n              </Route>\r\n            </Switch>\r\n          </SocketContext.Provider>\r\n          </Router>\r\n\r\n        </div>\r\n      \r\n    );\r\n  }\r\n}\r\n//<h1>{props.isLocal.toString()}</h1>\r\nexport { App };\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {App} from './App';\nimport reportWebVitals from './reportWebVitals';\n\nvar isLocal = false;\nif (window.location.hostname === \"localhost\" || window.location.hostname === \"127.0.0.1\" || window.location.hostname === \"\") {\n  isLocal = true;\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <App isLocal={isLocal}/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}