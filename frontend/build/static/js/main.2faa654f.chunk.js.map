{"version":3,"sources":["helpers/socket.js","components/Temperature.js","components/Profile.js","components/Status.js","views/home.js","views/profileList.js","views/editProfile.js","App.js","reportWebVitals.js","index.js"],"names":["socket","socketio","connect","SocketContext","React","createContext","Temperature","state","temperature","componentDidMount","bind","componentWillUnmount","fetch","then","response","json","result","setState","this","context","on","message","off","className","Component","contextType","Profile","props","hitRadius","draggable","options","pointHitRadius","animation","duration","scales","y","min","max","stepSize","title","text","display","color","font","size","x","plugins","dragData","round","dragX","onDrag","e","datasetIndex","index","value","onDragStart","element","onDragEnd","arrayUpdater","zoom","wheel","enabled","pinch","mode","tooltip","xAlign","yAlign","displayColors","caretPadding","caretSize","bodySpacing","legend","profile","name","data","datasets","label","datapoints","showLine","backgroundColor","borderColor","borderWidth","pointRadius","hoverRadius","historicTemps","borderDash","Status","status","console","log","new_status","Home","runProfile","stop","currentProfile","historicTemperature","percentDone","current_profile","historic_temperature","percent","axios","post","profile_name","res","reason","Button","as","Link","to","inverted","pathname","onClick","ProfileList","profiles","activeItem","loadClicked","handleItemClick","target","innerText","history","push","Grid","centered","columns","Column","Sticky","Date","date_created","toLocaleString","last_run","List","divided","relaxed","map","item","Item","Content","Header","withRouter","EditProfile","saveProfile","handleInputChange","newDatapoints","location","newName","newProfile","now","Input","onChange","defaultValue","theme","App","disconnect","Provider","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","isLocal","window","hostname","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2faa654f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport socketio from \"socket.io-client\";\r\n\r\n//no url since backend is hosted on the same domain\r\nexport const socket = socketio.connect();\r\nexport const SocketContext = React.createContext();","import { React, Component } from 'react';\r\nimport {SocketContext} from '../helpers/socket';\r\nimport './Components.css';\r\n\r\nclass Temperature extends Component {\r\n\r\n  static contextType = SocketContext;\r\n\r\n  constructor () {\r\n    super();\r\n    this.state = {temperature: 0};\r\n    this.componentDidMount = this.componentDidMount.bind(this);\r\n    this.componentWillUnmount = this.componentWillUnmount.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch('/temperature')\r\n      .then(response => response.json())\r\n      .then(result => {\r\n        this.setState({ temperature: result.temperature});\r\n    });\r\n    const socket = this.context;\r\n    socket.on(\"temperature_update\", (message) => {\r\n      this.setState({temperature: message.temperature});\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const socket = this.context;\r\n    socket.off(\"temperature_update\");\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"component\">\r\n      <h1>Temperature</h1>\r\n      <h3>{this.state.temperature} C</h3>\r\n      </div>\r\n    );\r\n  }\r\n    \r\n}\r\n\r\nexport default Temperature;\r\n","import React, { Component } from \"react\";\r\nimport { Scatter } from 'react-chartjs-2';\r\n//import * as zoom from 'chartjs-plugin-zoom'\r\n//import { Button } from 'semantic-ui-react';\r\nimport {DraggableGraph} from './DraggableGraph';\r\n\r\n\r\nclass Profile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.componentDidMount = this.componentDidMount.bind(this);\r\n\r\n    //hitradius over 25 ensures that touch devices can drag points\r\n    var hitRadius = 1;\r\n    if (this.props.draggable) {\r\n      hitRadius = 30;\r\n    }\r\n    this.options = {\r\n      pointHitRadius: hitRadius,\r\n      animation: {\r\n        duration: 0,\r\n      },\r\n      scales: {\r\n        y: {\r\n          min: 0,\r\n          max: 300,\r\n          stepSize: 1,\r\n          title: {\r\n            text: 'Temperature',\r\n            display: true,\r\n            color: 'rgba(41, 216, 255, 0.7)',\r\n            font: {\r\n              size: 20,\r\n            },\r\n          },\r\n        },\r\n        x: {\r\n          min: 0,\r\n          max: 400,\r\n          stepSize: 1,\r\n          title: {\r\n            text: 'Time (Seconds)',\r\n            display: true,\r\n            color: 'rgba(41, 216, 255, 0.7)',\r\n            font: {\r\n              size: 20,\r\n            },\r\n          },\r\n        },\r\n      },\r\n    \r\n      plugins: {\r\n        dragData: {\r\n          round: 0,\r\n          dragX: true,\r\n          onDrag: function (e, datasetIndex, index, value) {\r\n            //console.log(e, datasetIndex, index, value);\r\n          },\r\n          onDragStart: function (e, element) {\r\n            //console.log(e, element);\r\n          },\r\n          onDragEnd: function (e, datasetIndex, index, value) {\r\n            //update array with new datapoint\r\n            props.arrayUpdater[index] = value;\r\n            \r\n          },\r\n        },\r\n        zoom: {\r\n          wheel: {\r\n            enabled: true,\r\n          },\r\n          pinch: {\r\n            enabled: true\r\n          },\r\n          mode: 'xy',\r\n        },\r\n        tooltip: {\r\n          xAlign: 'right',\r\n          yAlign: 'bottom',\r\n          displayColors: false,\r\n          caretPadding: 30,\r\n          caretSize: 10,\r\n          bodySpacing: 20,\r\n        },\r\n        legend: {\r\n          display: false,\r\n        },\r\n        title: {\r\n          display: true,\r\n          text: this.props.profile.name\r\n        },\r\n      },\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    \r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Scatter data={{\r\n          datasets: [\r\n            {\r\n              label: 'Profile',\r\n              data: this.props.profile.datapoints,\r\n              showLine: true,\r\n              backgroundColor: 'rgba(42, 216, 255, 0.2)',\r\n              borderColor: 'rgba(42, 216, 255, 1)',\r\n              borderWidth: 1,\r\n              pointRadius: 10,\r\n              hoverRadius: 20,\r\n              dragData: this.props.draggable,\r\n            },\r\n            {\r\n              label: 'Historic Temerature',\r\n              data: this.props.historicTemps,\r\n              showLine: true,\r\n              backgroundColor: 'rgba(233, 236, 0, 0.2)',\r\n              borderColor: 'rgba(233, 236, 0, 1)',\r\n              borderWidth: 1,\r\n              pointRadius: 1,\r\n              hoverRadius: 2,\r\n              dragData: false,\r\n              borderDash: [10,5],\r\n            },\r\n          ],\r\n        }} options={this.options} />  \r\n      </>\r\n    );\r\n  }\r\n}\r\n//this.props.historicTemps\r\nexport default Profile;","import { React, Component } from 'react';\r\nimport {SocketContext} from '../helpers/socket';\r\nimport './Components.css';\r\n\r\nclass Status extends Component {\r\n\r\n  static contextType = SocketContext;\r\n\r\n  constructor () {\r\n    super();\r\n    this.state = {status: \"Ready\"};\r\n    this.componentDidMount = this.componentDidMount.bind(this);\r\n    this.componentWillUnmount = this.componentWillUnmount.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch('/status')\r\n      .then(response => response.json())\r\n      .then(result => {\r\n        console.log(result);\r\n        this.setState({ status: result.status});\r\n    });\r\n    const socket = this.context;\r\n    socket.on(\"status_update\", (message) => {\r\n      this.setState({status: message.new_status});\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const socket = this.context;\r\n    socket.off(\"status_update\");\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"component\">\r\n      <h1>Status</h1>\r\n      <h3>{this.state.status}</h3>\r\n      </div>\r\n    );\r\n  }\r\n    \r\n}\r\n\r\nexport default Status;","import { React, Component } from 'react';\r\nimport Temperature from '../components/Temperature';\r\nimport Profile from '../components/Profile';\r\nimport Status from '../components/Status';\r\nimport { Button } from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Link } from \"react-router-dom\";\r\nimport { socket } from '../helpers/socket';\r\nimport axios from'axios';\r\n\r\nclass Home extends Component {\r\n    constructor() {\r\n      super();\r\n      this.runProfile = this.runProfile.bind(this);\r\n      this.stop = this.stop.bind(this);\r\n      this.state = ({currentProfile: '', historicTemperature: [], percentDone: 0});\r\n    }\r\n\r\n    componentDidMount() {\r\n      fetch('/current_profile')\r\n      .then(response => response.json())\r\n      .then(result => {\r\n        this.setState({ currentProfile: result.current_profile});\r\n      });\r\n      socket.on(\"new_profile\", (message) => {\r\n        this.setState({currentProfile: message.current_profile});\r\n      });\r\n      socket.on(\"historic_temperature_update\", (message) => {\r\n        this.setState({historicTemperature: message.historic_temperature, percentDone: message.percent});\r\n      });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n      socket.off(\"new_profile\");\r\n      socket.off(\"historic_temperature_update\");\r\n    }\r\n\r\n    runProfile() {\r\n      axios.post('/run', {profile_name: this.state.currentProfile.name})\r\n      .then(res => {\r\n        console.log(res);\r\n      });\r\n    }\r\n\r\n    stop() {\r\n      axios.post('/stop', {reason: \"test\"})\r\n      .then(res => {\r\n        //console.log(res);\r\n      });\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <>\r\n            <Temperature />\r\n            <Status />\r\n            <Profile draggable={false} profile={this.state.currentProfile} historicTemps={this.state.historicTemperature} />\r\n            <Button as={Link} to='/profileList' inverted color='blue'>Past Profiles</Button>\r\n            <Button as={Link} to={{pathname: '/editProfile', state: {profile: this.state.currentProfile}}} inverted color='blue'>Edit Profile</Button>\r\n            <Button onClick={this.runProfile} inverted color='green'>Start</Button>\r\n            <Button onClick={this.stop} inverted color='red'>Stop</Button>\r\n        </>\r\n      );\r\n    }\r\n}\r\n\r\nexport default Home;","import { React, Component } from 'react';\r\nimport Profile from '../components/Profile';\r\nimport { Button, List, Grid, Sticky } from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport './profileList.css';\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport axios from 'axios';\r\n\r\nclass ProfileList extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = ({ profiles: [], activeItem: \"\" });\r\n    this.componentDidMount = this.componentDidMount.bind(this);\r\n    this.loadClicked = this.loadClicked.bind(this);\r\n    this.handleItemClick = this.handleItemClick.bind(this);\r\n  }\r\n\r\n  handleItemClick(e) {\r\n    fetch('/reflow_profiles/' + e.target.innerText)\r\n      .then(response => response.json())\r\n      .then(result => {\r\n        this.setState({ activeItem: result });\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch('/reflow_profiles/list')\r\n      .then(response => response.json())\r\n      .then(result => {\r\n        this.setState({ profiles: result });\r\n\r\n          //fetching datapoints\r\n          fetch('/reflow_profiles/' + this.state.profiles[0])\r\n            .then(response => response.json())\r\n            .then(result => {\r\n              this.setState({ activeItem: result });\r\n        });\r\n      });\r\n  }\r\n\r\n  loadClicked() {\r\n    axios.post('/reflow_profiles/load', { profile_name: this.state.activeItem.name })\r\n      .then(res => {\r\n        //check if response is ok or if validation failed\r\n        if (res.status === 200) {\r\n          //go to home page\r\n          const { history } = this.props;\r\n          if (history) history.push('/');\r\n        }\r\n      })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n\r\n        <Grid centered columns={2}>\r\n          <Grid.Column>\r\n            <Sticky>\r\n              <Profile draggable={false} profile={this.state.activeItem} historicTemps={[]} />\r\n              <h3>Date Created: {(new Date(this.state.activeItem.date_created)).toLocaleString()}</h3>\r\n              <h3>Last Loaded: {(new Date(this.state.activeItem.last_run)).toLocaleString()}</h3>\r\n            </Sticky>\r\n          </Grid.Column>\r\n          <Grid.Column>\r\n            <div className=\"list\">\r\n              <List divided inverted relaxed>\r\n                {this.state.profiles.map((item) => (\r\n                  <List.Item key={item} onClick={this.handleItemClick}>\r\n                    <List.Content>\r\n                      <List.Header>{item}</List.Header>\r\n                    </List.Content>\r\n                  </List.Item>\r\n                ))}\r\n              </List>\r\n            </div>\r\n          </Grid.Column>\r\n        </Grid>\r\n        \r\n        <Button as={Link} to=\"/\" inverted color='red'>Cancel</Button>\r\n        {/*<Button as={Link} to=\"/\" inverted color='blue'>Upload</Button>*/}\r\n        {/*<Button as={Link} to=\"/\" inverted color='blue'>Download</Button>*/}\r\n        <Button onClick={this.loadClicked} inverted color='green'>Load</Button>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(ProfileList);","import { React, Component } from 'react';\r\nimport Profile from '../components/Profile';\r\nimport { Button, Input } from 'semantic-ui-react';\r\nimport Keyboard from 'react-simple-keyboard';\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport 'react-simple-keyboard/build/css/index.css';\r\nimport axios from'axios';\r\n\r\n\r\nclass EditProfile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    //this.componentWillMount = this.componentWillMount.bind(this);\r\n    this.componentDidMount = this.componentDidMount.bind(this);\r\n    this.saveProfile = this.saveProfile.bind(this);\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n\r\n    //this array will be sent to the profile child component to be updated with the new points\r\n    this.newDatapoints = this.props.location.state.profile.datapoints;\r\n    this.newName = this.props.location.state.profile.name;\r\n    //this.date = new Date(date.now()).toISOString();\r\n  }\r\n\r\n  handleInputChange(e) {\r\n    this.newName = e.target.value;\r\n  }\r\n  \r\n  componentDidMount() {\r\n\r\n  }\r\n\r\n  saveProfile() {\r\n    var newProfile = {};\r\n    newProfile.name = this.newName;\r\n    newProfile.date_created = Date.now();\r\n    newProfile.last_run = 0;\r\n    newProfile.datapoints = this.newDatapoints;\r\n\r\n    axios.post('/reflow_profiles/save', newProfile)\r\n      .then(res => {\r\n        console.log(res);\r\n      });\r\n      //ask if user would like to load\r\n      //go to home page\r\n      const { history } = this.props;\r\n      if(history) history.push('/');\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Profile draggable={true} profile={this.props.location.state.profile} arrayUpdater={this.newDatapoints}/>\r\n        <Button as={Link} to=\"/\" inverted color='red'>Cancel</Button>\r\n        <Button onClick={this.saveProfile} inverted color='green'>Save</Button>\r\n        <Input onChange={this.handleInputChange} label='Profile Name' defaultValue={this.newName} />\r\n        <Keyboard theme={\"hg-theme-default\"} />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(EditProfile);","\r\nimport React, { Component } from \"react\";\r\nimport { SocketContext, socket } from './helpers/socket';\r\nimport './App.css';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport Home from './views/home';\r\nimport ProfileList from './views/profileList';\r\n//import Profile from './components/Profile';\r\n\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\nimport EditProfile from \"./views/editProfile\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.componentDidMount = this.componentDidMount.bind(this);\r\n    this.componentWillUnmount = this.componentWillUnmount.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    \r\n  }\r\n\r\n  componentWillUnmount() {\r\n    socket.disconnect();\r\n  }\r\n\r\n\r\n  render () {\r\n    return (\r\n      <SocketContext.Provider value={socket}>\r\n        <div className=\"App\">\r\n\r\n            <Router>\r\n              <Switch>\r\n                <Route exact path=\"/\" >\r\n                  <Home />\r\n                </Route>\r\n                <Route path=\"/editProfile\" >\r\n                  <EditProfile />\r\n                </Route>\r\n                <Route path=\"/profileList\" >\r\n                  <ProfileList />\r\n                </Route>\r\n              </Switch>\r\n            </Router>\r\n\r\n        </div>\r\n      </SocketContext.Provider>\r\n    );\r\n  }\r\n}\r\n//<h1>{props.isLocal.toString()}</h1>\r\nexport {App};\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {App} from './App';\nimport reportWebVitals from './reportWebVitals';\n\nvar isLocal = false;\nif (window.location.hostname === \"localhost\" || window.location.hostname === \"127.0.0.1\" || window.location.hostname === \"\") {\n  isLocal = true;\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <App isLocal={isLocal}/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}