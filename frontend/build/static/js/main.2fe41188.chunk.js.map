{"version":3,"sources":["helpers/socket.js","components/Profile.js","components/StatusBar.js","views/home.js","views/settings.js","views/profileList.js","views/editProfile.js","App.js","reportWebVitals.js","index.js"],"names":["socket","socketio","connect","SocketContext","React","createContext","Profile","props","componentDidMount","bind","hitRadius","draggable","options","maintainAspectRatio","responsive","pointHitRadius","animation","duration","scales","y","min","max","stepSize","title","text","display","color","font","size","x","plugins","dragData","round","dragX","onDrag","e","datasetIndex","index","value","onDragStart","element","onDragEnd","arrayUpdater","zoom","wheel","enabled","pinch","mode","tooltip","xAlign","yAlign","displayColors","caretPadding","caretSize","bodySpacing","legend","data","datasets","label","this","profile","datapoints","showLine","backgroundColor","borderColor","borderWidth","pointRadius","hoverRadius","historicTemps","borderDash","fill","Component","StatusBar","componentWillUnmount","drawerChange","state","drawer","percentage","temperature","status","on","message","setState","percent","off","AppBar","position","Toolbar","IconButton","edge","aria-label","onClick","Grid","container","spacing","item","Typography","LinearProgress","variant","Drawer","open","onClose","ListItem","button","ListItemIcon","Divider","component","Link","to","ListItemText","Home","runProfile","stop","currentProfile","historicTemperature","percentDone","fetch","then","response","json","result","current_profile","historic_temperature","axios","post","profile_name","name","res","reason","style","paddingTop","paddingLeft","width","justifyContent","Button","pathname","startIcon","Settings","ProfileList","MyDataGrid","styled","DataGrid","height","SelectButton","background","columns","field","headerName","editable","profiles","activeItem","dialog","loadClicked","handleItemClick","handleDialogClose","row","forEach","Date","date_created","toLocaleString","last_run","history","push","Dialog","fullWidth","maxWidth","DialogTitle","DialogContent","DialogActions","direction","align","xs","md","lg","rows","pageSize","checkboxSelection","disableMultipleSelection","onRowClick","autoHeight","withRouter","EditProfile","saveProfile","handleInputChange","goBack","cancelClicked","loadDialog","forceLoadDialog","newDatapoints","location","newName","target","newProfile","now","autoFocus","alignItems","justify","Input","onChange","defaultValue","App","disconnect","className","Provider","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","isLocal","window","hostname","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2fe41188.chunk.js","sourcesContent":["import React from \"react\";\r\nimport socketio from \"socket.io-client\";\r\n\r\n//no url since backend is hosted on the same domain\r\nexport const socket = socketio.connect();\r\nexport const SocketContext = React.createContext();","import React, { Component } from \"react\";\r\nimport { Scatter } from 'react-chartjs-2';\r\n//import * as zoom from 'chartjs-plugin-zoom'\r\nimport {DraggableGraph} from './DraggableGraph';\r\n\r\n\r\nclass Profile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.componentDidMount = this.componentDidMount.bind(this);\r\n\r\n    //hitradius over 25 ensures that touch devices can drag points\r\n    var hitRadius = 1;\r\n    if (this.props.draggable) {\r\n      hitRadius = 30;\r\n    }\r\n    this.options = {\r\n      maintainAspectRatio: true,\r\n      responsive: true,\r\n      pointHitRadius: hitRadius,\r\n      animation: {\r\n        duration: 0,\r\n      },\r\n      scales: {\r\n        y: {\r\n          min: 0,\r\n          max: 300,\r\n          stepSize: 1,\r\n          title: {\r\n            text: 'Temperature',\r\n            display: true,\r\n            color: 'rgba(41, 216, 255, 0.7)',\r\n            font: {\r\n              size: 20,\r\n            },\r\n          },\r\n        },\r\n        x: {\r\n          min: 0,\r\n          max: 400,\r\n          stepSize: 1,\r\n          title: {\r\n            text: 'Time (Seconds)',\r\n            display: true,\r\n            color: 'rgba(41, 216, 255, 0.7)',\r\n            font: {\r\n              size: 20,\r\n            },\r\n          },\r\n        },\r\n      },\r\n    \r\n      plugins: {\r\n        dragData: {\r\n          round: 0,\r\n          dragX: true,\r\n          onDrag: function (e, datasetIndex, index, value) {\r\n            //console.log(e, datasetIndex, index, value);\r\n          },\r\n          onDragStart: function (e, element) {\r\n            //console.log(e, element);\r\n          },\r\n          onDragEnd: function (e, datasetIndex, index, value) {\r\n            //update array with new datapoint\r\n            props.arrayUpdater[index] = value;\r\n            \r\n          },\r\n        },\r\n        zoom: {\r\n          wheel: {\r\n            enabled: true,\r\n          },\r\n          pinch: {\r\n            enabled: true\r\n          },\r\n          mode: 'xy',\r\n        },\r\n        tooltip: {\r\n          xAlign: 'right',\r\n          yAlign: 'bottom',\r\n          displayColors: false,\r\n          caretPadding: 30,\r\n          caretSize: 10,\r\n          bodySpacing: 20,\r\n        },\r\n        legend: {\r\n          display: false,\r\n        },\r\n        title: {\r\n          display: false,\r\n        },\r\n      },\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    \r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Scatter data={{\r\n          datasets: [\r\n            {\r\n              label: 'Profile',\r\n              data: this.props.profile.datapoints,\r\n              showLine: true,\r\n              backgroundColor: 'rgba(42, 216, 255, 0.2)',\r\n              borderColor: 'rgba(42, 216, 255, 1)',\r\n              borderWidth: 1,\r\n              pointRadius: 5,\r\n              hoverRadius: 10,\r\n              dragData: this.props.draggable,\r\n            },\r\n            {\r\n              label: 'Historic Temerature',\r\n              data: this.props.historicTemps,\r\n              showLine: true,\r\n              backgroundColor: 'rgba(233, 236, 0, 0.2)',\r\n              borderColor: 'rgba(233, 236, 0, 1)',\r\n              borderWidth: 1,\r\n              pointRadius: 1,\r\n              hoverRadius: 2,\r\n              dragData: false,\r\n              borderDash: [10, 5],\r\n              fill: 0,\r\n            },\r\n          ],\r\n        }} options={this.options} />  \r\n      </>\r\n    );\r\n  }\r\n}\r\n//this.props.historicTemps\r\nexport default Profile;","import { React, Component } from 'react';\r\nimport { socket } from '../helpers/socket';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport HistoryIcon from '@material-ui/icons/History';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport { Link } from \"react-router-dom\";\r\nimport { ListItem, Drawer, ListItemText, ListItemIcon, Divider } from '@material-ui/core';\r\n\r\nimport { LinearProgress, Grid } from '@material-ui/core';\r\n\r\nclass StatusBar extends Component {\r\n    constructor() {\r\n        super();\r\n        this.componentDidMount = this.componentDidMount.bind(this);\r\n        this.componentWillUnmount = this.componentWillUnmount.bind(this);\r\n        this.drawerChange = this.drawerChange.bind(this);\r\n        this.state = { drawer: false };\r\n        this.state = { percentage: 0, temperature: 0, status: \"Ready\" };\r\n    }\r\n\r\n    componentDidMount() {\r\n        socket.on(\"status_update\", (message) => {\r\n            this.setState({\r\n                percentage: message.percent,\r\n                temperature: message.temperature,\r\n                status: message.status\r\n            });\r\n        });\r\n    }\r\n\r\n    drawerChange() {\r\n        if (this.state.drawer) {\r\n            this.setState({ drawer: false });\r\n        } else {\r\n            this.setState({ drawer: true });\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        socket.off(\"status_update\");\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <AppBar position=\"static\">\r\n                    <Toolbar>\r\n                        <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\" onClick={this.drawerChange}>\r\n                            <MenuIcon />\r\n                        </IconButton>\r\n                        <Grid container spacing={3}>\r\n                            <Grid item>\r\n                                <Typography  >\r\n                                    Address: ovenpi.local:3001\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Typography >\r\n                                    Temperature: {this.state.temperature}\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Typography  >\r\n                                    Status: {this.state.status}\r\n                                </Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Toolbar>\r\n                    <LinearProgress variant=\"determinate\" value={100} />\r\n                </AppBar>\r\n\r\n                <Drawer open={this.state.drawer} onClose={this.drawerChange} >\r\n                    <ListItem button key={\"menu\"} onClick={this.drawerChange}>\r\n                        <ListItemIcon><MenuIcon /></ListItemIcon>\r\n                    </ListItem>\r\n                    <Divider />\r\n                    <ListItem button key={\"Home\"} component={Link} onClick={this.drawerChange} to='/'>\r\n                        <ListItemIcon><HomeIcon /></ListItemIcon>\r\n                        <ListItemText>Home</ListItemText>\r\n                    </ListItem>\r\n                    <ListItem button key={\"ProfileList\"} component={Link} onClick={this.drawerChange} to='/profileList'>\r\n                        <ListItemIcon><HistoryIcon /></ListItemIcon>\r\n                        <ListItemText>Profile List</ListItemText>\r\n                    </ListItem>\r\n                    <ListItem button key={\"Settings\"} component={Link} onClick={this.drawerChange} to='/settings'>\r\n                        <ListItemIcon><SettingsIcon /></ListItemIcon>\r\n                        <ListItemText>Settings</ListItemText>\r\n                    </ListItem>\r\n                </Drawer>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default StatusBar;\r\n\r\n","import { React, Component } from 'react';\r\n\r\nimport Profile from '../components/Profile';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { Button } from '@material-ui/core';\r\nimport { Link } from \"react-router-dom\";\r\nimport { socket } from '../helpers/socket';\r\nimport axios from 'axios';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport StopIcon from '@material-ui/icons/Stop';\r\nimport StatusBar from '../components/StatusBar';\r\n\r\nclass Home extends Component {\r\n    constructor() {\r\n      super();\r\n      this.runProfile = this.runProfile.bind(this);\r\n      this.stop = this.stop.bind(this);\r\n      this.state = ({ currentProfile: '', historicTemperature: [], percentDone: 0 });\r\n      \r\n    }\r\n\r\n    componentDidMount() {\r\n      fetch('/api/current_profile')\r\n      .then(response => response.json())\r\n      .then(result => {\r\n        this.setState({ currentProfile: result.current_profile});\r\n      });\r\n      socket.on(\"status_update\", (message) => {\r\n        this.setState({\r\n          currentProfile: message.current_profile,\r\n          historicTemperature: message.historic_temperature\r\n        });\r\n      });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n      socket.off(\"status_update\");\r\n    }\r\n\r\n    runProfile() {\r\n      axios.post('/api/run', {profile_name: this.state.currentProfile.name})\r\n      .then(res => {\r\n      });\r\n    }\r\n\r\n    stop() {\r\n      axios.post('/api/stop', {reason: \"test\"})\r\n      .then(res => {\r\n        //console.log(res);\r\n      });\r\n    }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n          \r\n        <StatusBar />\r\n        <div style={{  paddingTop: \"20px\", paddingLeft: \"20px\", width: '85%', display: \"flex\", justifyContent: \"center\"}}>\r\n          <Profile draggable={false} profile={this.state.currentProfile} historicTemps={this.state.historicTemperature} />\r\n        </div>\r\n          \r\n          \r\n        <Button component={Link} to={{ pathname: '/editProfile', state: { profile: this.state.currentProfile } }} startIcon={<EditIcon />} variant=\"contained\" color=\"primary\" >Edit Current Profile</Button>\r\n          <Button onClick={this.stop} startIcon={<StopIcon />} variant=\"contained\" color=\"primary\">Stop</Button>\r\n          <Button onClick={this.runProfile} startIcon={<PlayArrowIcon />} variant=\"contained\" color=\"primary\">Start</Button>\r\n          \r\n        </>\r\n      );\r\n    }\r\n}\r\n\r\nexport default Home;","import React, { Component } from \"react\";\r\n\r\nimport StatusBar from '../components/StatusBar';\r\n\r\nclass Settings extends Component {\r\n\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <StatusBar />\r\n                <h1 style={{ color: 'white' }}>This page is still under construction</h1>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Settings;","import { React, Component } from 'react';\r\nimport Profile from '../components/Profile';\r\nimport { Button, Grid, Dialog, DialogTitle, DialogContent, DialogActions, IconButton } from '@material-ui/core';\r\nimport { DataGrid } from '@material-ui/data-grid'\r\nimport './profileList.css';\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport PublishIcon from '@material-ui/icons/Publish';\r\nimport SaveAltIcon from '@material-ui/icons/SaveAlt';\r\nimport { styled } from '@material-ui/core/styles';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport StatusBar from '../components/StatusBar';\r\n\r\nclass ProfileList extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = ({ profiles: [], activeItem: \"\", dialog: false });\r\n    this.componentDidMount = this.componentDidMount.bind(this);\r\n    this.loadClicked = this.loadClicked.bind(this);\r\n    this.handleItemClick = this.handleItemClick.bind(this);\r\n    this.handleDialogClose = this.handleDialogClose.bind(this);\r\n\r\n  }\r\n  MyDataGrid = styled(DataGrid)({\r\n    color: 'white',\r\n    height: 550,\r\n  });\r\n\r\n  SelectButton = styled(Button)({\r\n    background: '#3dd900',\r\n    '&:hover': '#3dd900'\r\n  });\r\n\r\n  columns = [\r\n    { field: 'name', headerName: 'Profile Name', width: 200 },\r\n    {\r\n      field: 'last_run',\r\n      headerName: 'Last Loaded',\r\n      width: 200,\r\n      editable: false,\r\n    },\r\n    {\r\n      field: 'date_created',\r\n      headerName: 'Date Created',\r\n      width: 200,\r\n      editable: false,\r\n    },\r\n  ];\r\n\r\n\r\n  handleItemClick(e) {\r\n    this.setState({ activeItem: e.row })\r\n    this.setState({ dialog: true });\r\n  }\r\n\r\n  handleDialogClose() {\r\n    this.setState({ dialog: false });\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch('/api/reflow_profiles/all')\r\n      .then(response => response.json())\r\n      .then(result => {\r\n        result.forEach(element => {\r\n          element['id'] = element.name;\r\n          element['date_created'] = new Date(element.date_created).toLocaleString();\r\n          element['last_run'] = new Date(element.last_run).toLocaleString();\r\n        });\r\n        this.setState({ profiles: result });\r\n      });\r\n  }\r\n\r\n  loadClicked() {\r\n    axios.post('/api/reflow_profiles/load', { profile_name: this.state.activeItem.name })\r\n      .then(res => {\r\n        //check if response is ok or if validation failed\r\n        if (res.status === 200) {\r\n          //go to home page\r\n          const { history } = this.props;\r\n          if (history) history.push('/');\r\n        }\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <StatusBar />\r\n        <Dialog onClose={this.handleDialogClose} open={this.state.dialog} fullWidth={true} maxWidth={\"sm\"}>\r\n          <DialogTitle>\r\n            {this.state.activeItem.name}\r\n            <IconButton aria-label=\"close\" onClick={this.handleDialogClose}>\r\n              <CloseIcon />\r\n            </IconButton>\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <Profile draggable={false} profile={this.state.activeItem} historicTemps={[]} />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button component={Link} to={{ pathname: '/editProfile', state: { profile: this.state.activeItem } }} startIcon={<EditIcon />} variant=\"contained\" color=\"primary\">Edit Profile</Button>\r\n            <this.SelectButton onClick={this.loadClicked} startIcon={<DoneIcon />} variant=\"contained\">Load</this.SelectButton>\r\n          </DialogActions>\r\n        </Dialog>\r\n\r\n        <Grid container direction={\"row\"} align={\"center\"} justifyContent={\"center\"} spacing={2}>\r\n            <Grid item xs={12} md={8} lg={6}>\r\n              <this.MyDataGrid\r\n                rows={this.state.profiles}\r\n                columns={this.columns}\r\n                pageSize={5}\r\n                checkboxSelection={false}\r\n              disableMultipleSelection={true}\r\n              onRowClick={this.handleItemClick}\r\n              autoHeight={true}\r\n              />\r\n            </Grid>\r\n        </Grid>\r\n        \r\n\r\n\r\n        <Button component={Link} to=\"/\" startIcon={<CancelIcon />} variant=\"contained\" color=\"primary\">Cancel</Button>\r\n        \r\n        <Button startIcon={<PublishIcon />} variant=\"contained\" color=\"primary\">Upload</Button>\r\n        <Button startIcon={<SaveAltIcon />} variant=\"contained\" color=\"primary\">Download</Button>\r\n        \r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(ProfileList);","import { React, Component } from 'react';\r\nimport Profile from '../components/Profile';\r\nimport { Button, Input, Grid } from '@material-ui/core';\r\nimport Keyboard from 'react-simple-keyboard';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport 'react-simple-keyboard/build/css/index.css';\r\nimport axios from 'axios';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nimport StatusBar from '../components/StatusBar';\r\n\r\nimport SaveIcon from '@material-ui/icons/Save';\r\n\r\n\r\nclass EditProfile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    //this.componentWillMount = this.componentWillMount.bind(this);\r\n    this.componentDidMount = this.componentDidMount.bind(this);\r\n    this.saveProfile = this.saveProfile.bind(this);\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n    this.goBack = this.goBack.bind(this);\r\n    this.loadClicked = this.loadClicked.bind(this);\r\n    this.cancelClicked = this.cancelClicked.bind(this);\r\n    this.state = ({ loadDialog: false, forceLoadDialog: false });\r\n    //this array will be sent to the profile child component to be updated with the new points\r\n    this.newDatapoints = this.props.location.state.profile.datapoints;\r\n    this.newName = this.props.location.state.profile.name;\r\n  }\r\n\r\n  handleInputChange(e) {\r\n    this.newName = e.target.value;\r\n  }\r\n  \r\n  componentDidMount() {\r\n\r\n  }\r\n\r\n  goBack() {\r\n    this.props.history.goBack();\r\n  }\r\n\r\n  loadClicked() {\r\n    axios.post('/api/reflow_profiles/load', { profile_name: this.newName })\r\n      .then(res => {\r\n        //check if response is ok or if validation failed\r\n        if (res.status === 200) {\r\n          //go to home page\r\n          const { history } = this.props;\r\n          if (history) history.push('/');\r\n        }\r\n      });\r\n  }\r\n\r\n  cancelClicked() {\r\n    this.setState({ loadDialog: false });\r\n  }\r\n\r\n  saveProfile() {\r\n    var newProfile = {};\r\n    newProfile.name = this.newName;\r\n    newProfile.date_created = Date.now();\r\n    newProfile.last_run = 0;\r\n    newProfile.datapoints = this.newDatapoints;\r\n\r\n    axios.post('/api/reflow_profiles/save', newProfile)\r\n      .then(res => {\r\n        //console.log(res);\r\n        this.setState({ loadDialog: true });\r\n      });\r\n      //ask if user would like to load\r\n      //go to home page\r\n      //const { history } = this.props;\r\n      //if(history) history.push('/');\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <StatusBar />\r\n        <Dialog open={this.state.loadDialog}>\r\n          <DialogTitle>\r\n            Profile saved\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            Would you like to load the profile now?\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button autoFocus onClick={this.cancelClicked} color=\"primary\">\r\n              Don't Load\r\n            </Button>\r\n            <Button onClick={this.loadClicked} color=\"primary\" autoFocus>\r\n              Load\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n        <div style={{ paddingTop: \"20px\", paddingLeft: \"20px\", width: '85%', display: \"flex\", justifyContent: \"center\" }}>\r\n          <Profile draggable={true} profile={this.props.location.state.profile} arrayUpdater={this.newDatapoints} />\r\n        </div>\r\n        \r\n        <Grid container spacing={3} alignItems=\"center\" justify=\"center\">\r\n          <Grid item>\r\n            <Button onClick={this.goBack} startIcon={<CancelIcon />} variant=\"contained\" color=\"primary\">Cancel</Button>\r\n          </Grid>\r\n          <Grid item>\r\n            <Button onClick={this.saveProfile} startIcon={<SaveIcon />} variant=\"contained\" color=\"primary\">Save</Button>\r\n          </Grid>\r\n          <Grid item>\r\n            <Input style={{ color: 'white' }} onChange={this.handleInputChange} label='Profile Name' defaultValue={this.newName} />\r\n          </Grid>\r\n        </Grid>\r\n        \r\n        \r\n        \r\n        {/*<Keyboard theme={\"hg-theme-default\"} />*/}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(EditProfile);","\r\nimport React, { Component } from \"react\";\r\nimport { SocketContext, socket } from './helpers/socket';\r\nimport './App.css';\r\nimport Home from './views/home';\r\nimport Settings from './views/settings';\r\nimport ProfileList from './views/profileList';\r\n\r\n\r\n\r\n//import Profile from './components/Profile';\r\n\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\nimport EditProfile from \"./views/editProfile\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.componentWillUnmount = this.componentWillUnmount.bind(this);\r\n\r\n  }\r\n\r\n\r\n\r\n  componentWillUnmount() {\r\n    socket.disconnect();\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n\r\n      \r\n        <div className=\"App\">\r\n        <Router>\r\n          <SocketContext.Provider value={socket}>\r\n            <Switch>\r\n              <Route exact path=\"/\" >\r\n                <Home />\r\n              </Route>\r\n              <Route path=\"/editProfile\" >\r\n                <EditProfile />\r\n              </Route>\r\n              <Route path=\"/profileList\" >\r\n                <ProfileList />\r\n              </Route>\r\n              <Route path=\"/settings\" >\r\n                <Settings />\r\n              </Route>\r\n            </Switch>\r\n          </SocketContext.Provider>\r\n          </Router>\r\n\r\n        </div>\r\n      \r\n    );\r\n  }\r\n}\r\n//<h1>{props.isLocal.toString()}</h1>\r\nexport { App };\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {App} from './App';\nimport reportWebVitals from './reportWebVitals';\n\nvar isLocal = false;\nif (window.location.hostname === \"localhost\" || window.location.hostname === \"127.0.0.1\" || window.location.hostname === \"\") {\n  isLocal = true;\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <App isLocal={isLocal}/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}